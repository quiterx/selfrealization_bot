import aiosqlite
import random
from .database import DB_PATH

async def init_motivation_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    async with aiosqlite.connect(DB_PATH) as db:
        # –¢–∞–±–ª–∏—Ü–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        await db.execute('''
            CREATE TABLE IF NOT EXISTS motivation (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                content TEXT NOT NULL,
                type TEXT CHECK(type IN ('general', 'nutrition', 'fitness'))
            )
        ''')
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞
        async with db.execute('SELECT COUNT(*) FROM motivation') as cursor:
            count = await cursor.fetchone()
            if count[0] == 0:
                messages = [
                    ("–¢—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—à—å! üí™", "general"),
                    ("–ö–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏! üèÉ‚Äç‚ôÇÔ∏è", "general"),
                    ("–°–µ–≥–æ–¥–Ω—è - –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π! üåü", "general"),
                    ("–ü–æ–º–Ω–∏: —Ç—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ –¥–ª—è —Å–µ–±—è! ‚ù§Ô∏è", "general"),
                    ("–ù–µ —Å–¥–∞–≤–∞–π—Å—è! –¢—ã —É–∂–µ –ø—Ä–æ—à–µ–ª(–∞) –¥–æ–ª–≥–∏–π –ø—É—Ç—å! üèÜ", "general"),
                    ("–ü–µ–π—Ç–µ –≤–æ–¥—É –ø–µ—Ä–µ–¥ –µ–¥–æ–π - —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∞–ø–ø–µ—Ç–∏—Ç! üíß", "nutrition"),
                    ("–í—ã–±–∏—Ä–∞–π—Ç–µ —Ü–µ–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤–º–µ—Å—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö! ü•ó", "nutrition"),
                    ("–ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞–∫ - —ç—Ç–æ –≤–∞–∂–Ω–µ–π—à–∏–π –ø—Ä–∏–µ–º –ø–∏—â–∏! üç≥", "nutrition"),
                    ("–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø—Ä–∏–µ–º—ã –ø–∏—â–∏ –∑–∞—Ä–∞–Ω–µ–µ! üìù", "nutrition"),
                    ("–°–ª—É—à–∞–π—Ç–µ —Å–≤–æ–µ —Ç–µ–ª–æ - –æ–Ω–æ –∑–Ω–∞–µ—Ç, —á—Ç–æ –µ–º—É –Ω—É–∂–Ω–æ! üßò‚Äç‚ôÇÔ∏è", "nutrition"),
                    ("–†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! üèãÔ∏è‚Äç‚ôÇÔ∏è", "fitness"),
                    ("–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ä–∞–∑–º–∏–Ω–∫—É –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π! üî•", "fitness"),
                    ("–°–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç —Å–∂–∏–≥–∞—Ç—å –∫–∞–ª–æ—Ä–∏–∏ –¥–∞–∂–µ –ø–æ—Å–ª–µ –∑–∞–Ω—è—Ç–∏–π! üí™", "fitness"),
                    ("–ö–∞—Ä–¥–∏–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —É–∫—Ä–µ–ø–ª—è—é—Ç —Å–µ—Ä–¥—Ü–µ –∏ —Å–∂–∏–≥–∞—é—Ç –∂–∏—Ä! üèÉ‚Äç‚ôÇÔ∏è", "fitness"),
                    ("–†–∞—Å—Ç—è–∂–∫–∞ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - –∑–∞–ª–æ–≥ –≥–∏–±–∫–æ—Å—Ç–∏ –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç—Ä–∞–≤–º! üßò‚Äç‚ôÄÔ∏è", "fitness")
                ]
                await db.executemany(
                    'INSERT INTO motivation (content, type) VALUES (?, ?)',
                    messages
                )
                await db.commit()

async def get_random_motivation():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    async with aiosqlite.connect(DB_PATH) as db:
        async with db.execute('''
            SELECT content FROM motivation 
            WHERE type = 'general' 
            ORDER BY RANDOM() LIMIT 1
        ''') as cursor:
            row = await cursor.fetchone()
            return row[0] if row else "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™"

async def get_random_nutrition_tip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –ø–æ –ø–∏—Ç–∞–Ω–∏—é"""
    async with aiosqlite.connect(DB_PATH) as db:
        async with db.execute('''
            SELECT content FROM motivation 
            WHERE type = 'nutrition' 
            ORDER BY RANDOM() LIMIT 1
        ''') as cursor:
            row = await cursor.fetchone()
            return row[0] if row else "–ü–µ–π—Ç–µ –±–æ–ª—å—à–µ –≤–æ–¥—ã –∏ –µ—à—å—Ç–µ –±–æ–ª—å—à–µ –æ–≤–æ—â–µ–π! ü•ó"

async def get_random_fitness_tip():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –ø–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º"""
    async with aiosqlite.connect(DB_PATH) as db:
        async with db.execute('''
            SELECT content FROM motivation 
            WHERE type = 'fitness' 
            ORDER BY RANDOM() LIMIT 1
        ''') as cursor:
            row = await cursor.fetchone()
            return row[0] if row else "–†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - –∑–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞! üí™" 